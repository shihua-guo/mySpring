<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.2.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">
	<!-- 配置切面类 -->
	<bean id="handler" class="com.briup.theory.aop.aopconfig.Handler"></bean>
	<!-- 配置目标类 -->
	<bean id="act" class="com.briup.theory.aop.aopconfig.Action"></bean>
	<!-- 配置代理对象：aop-config -->
	<!-- proxy-target-class属性：默认false
		 true：cglib继承来实现动态代理 
	 	 false：使用jdk实现接口的方式来实现动态代理
	-->
	<aop:config proxy-target-class="false">
		<!-- 定义切入点 -->
		<aop:pointcut expression="execution(public * com.briup.theory.aop.aopconfig.Action.*(..))"
		 id="actCut"/>
		<!-- 定义切面类 -->
		<aop:aspect id="myAspect" ref="handler">
			<aop:before method="before" pointcut-ref="actCut"/>
			
			<!-- after不管方法是否正常结束都会起作用 -->
			<aop:before method="after" pointcut-ref="actCut"/>
			
			<!-- after-returning需要方法正常结束才会起作用（抛出异常不起作用） -->
			<aop:after-returning method="afterReturning" pointcut-ref="actCut"/>
			
			<aop:around method="around" pointcut-ref="actCut"/>
			
			<!-- after-throwing只有当切入点代表的方法抛出异常的时候才会起作用
				属性：throwing="ex"，代表异常的名字要是ex
			 -->
			<aop:after-throwing method="throwing" pointcut-ref="actCut"
			throwing="ex"/>
		</aop:aspect>
	</aop:config>
	
</beans>
